res_2000 = read.csv('results_2000.csv')
res_10000 = read.csv('results_10000_bn_deep.csv')
res_2000 %>% select(-time) %>%
gather('model','acc',-c(depth,samplesize))%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point() + geom_smooth(se = FALSE) +
facet_wrap('depth')
#Make this plot cooler with stuff from jp's plots
pdf('results_plot.pdf')
res_10000 %>% select(-time) %>%
gather('model','acc',-samplesize)%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.9,.2)) +
xlab('Sample Size') + ylab('Validation Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=5),axis.title=element_text(size=6),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
### results of 5 runs of ciphar experiment
setwd('C:/Users/Nick/Documents/Classes/Spring 19/Plan B/Ciphar_results')
cdata = data.frame('samplesize' = numeric(),
'NN_acc' = numeric(),
'RF_acc' = numeric(),
'SVM_acc' = numeric(),
'nntime' = numeric(),
'tottime' = numeric(),
'run' = numeric())
for(i in 1:5){
filename = paste('results_5000_',i,'.csv',sep = "")
temp = read.csv(filename)
run = rep(i,nrow(temp))
result = cbind(temp,run)
cdata = rbind(cdata,result)
}
write.csv(cdata,'ciphar_cdata.csv',row.names = FALSE)
pdata = cdata %>%
group_by(samplesize) %>%
summarise(mNN = mean(NN_acc),
sNN = sd(NN_acc),
mRF = mean(RF_acc),
sRF = sd(RF_acc),
mSVM = mean(SVM_acc),
sSVM = sd(SVM_acc),
mNNt = mean(nntime),
smNNt = sd(nntime),
mTt = mean(tottime),
smTt = sd(tottime))
write.csv(pdata,'ciphar_pdata.csv',row.names = FALSE)
setwd('C:/Users/Nick/Documents/Classes/Spring 19/Plan B/final_paper')
hw = 5 # height/width
# plot the means
pdf('results_ciphar_mean_plot.pdf',width = hw,height = hw)
pdata %>% select(-c(sNN,sRF,sSVM,mNNt,smNNt,mTt,smTt)) %>%
gather('model','acc',-samplesize)%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('Validation Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
# plot the standard errors
pdf('results_ciphar_se_plot.pdf',width = hw,height = hw)
pdata %>% select(-c(mNN,mRF,mSVM,mNNt,smNNt,mTt,smTt)) %>%
gather('model','se',-samplesize)%>%
ggplot(aes(samplesize,se,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('SE of Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
# plot the time
pdf('results_ciphar_time_plot.pdf',width = hw,height = hw)
pdata %>% select(-c(mNN,sNN,mRF,sRF,mSVM,sSVM,smNNt,smTt)) %>%
gather('model','time',-samplesize)%>%
ggplot(aes(samplesize,time,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue"),
labels = c('CNN','Total')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('Time') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
### means table for range
start = 3000
stop = 4000
mdata = pdata %>% filter(samplesize %in% seq(start,stop))
out = apply(mdata,2,function(x) round(mean(x),4)) %>%
select(-samplesize)
### spot checks
spots = c(100,500,1000,5000)
pdata %>% filter(samplesize %in% spots) %>%
select(-c(mNN,mRF,mSVM,mNNt,smNNt,smTt))
res_10000 %>% select(-time) %>%
gather('model','acc',-samplesize)%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.9,.2)) +
xlab('Sample Size') + ylab('Validation Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=5),axis.title=element_text(size=6),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
## Nick Wornson
## Plan B Project
## This script will look at data generated from run_experiment.py
library(tidyverse)
setwd('C:/Users/XPS9360/Documents/grad_stuff/Spring 19/Plan B')
res_2000 = read.csv('results_2000.csv')
res_10000 = read.csv('results_10000_bn_deep.csv')
# png's for the website
setwd('C:/Users/XPS9360/Documents/webpage/nwornson.github.io/assets')
#facet plot
png('facet.png')
res_2000 %>% select(-time) %>%
gather('model','acc',-c(depth,samplesize))%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point() + geom_smooth(se = FALSE) +
facet_wrap('depth')
dev.off()
#Make this plot cooler with stuff from jp's plots
png('results_plot.png')
res_10000 %>% select(-time) %>%
gather('model','acc',-samplesize)%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.9,.2)) +
xlab('Sample Size') + ylab('Validation Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=5),axis.title=element_text(size=6),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
### results of 5 runs of ciphar experiment
setwd('C:/Users/Nick/Documents/Classes/Spring 19/Plan B/Ciphar_results')
cdata = data.frame('samplesize' = numeric(),
'NN_acc' = numeric(),
'RF_acc' = numeric(),
'SVM_acc' = numeric(),
'nntime' = numeric(),
'tottime' = numeric(),
'run' = numeric())
for(i in 1:5){
filename = paste('results_5000_',i,'.csv',sep = "")
temp = read.csv(filename)
run = rep(i,nrow(temp))
result = cbind(temp,run)
cdata = rbind(cdata,result)
}
#write.csv(cdata,'ciphar_cdata.csv',row.names = FALSE)
pdata = cdata %>%
group_by(samplesize) %>%
summarise(mNN = mean(NN_acc),
sNN = sd(NN_acc),
mRF = mean(RF_acc),
sRF = sd(RF_acc),
mSVM = mean(SVM_acc),
sSVM = sd(SVM_acc),
mNNt = mean(nntime),
smNNt = sd(nntime),
mTt = mean(tottime),
smTt = sd(tottime))
#write.csv(pdata,'ciphar_pdata.csv',row.names = FALSE)
#setwd('C:/Users/Nick/Documents/Classes/Spring 19/Plan B/final_paper')
hw = 5 # height/width
# plot the means
png('results_ciphar_mean_plot.png',width = hw,height = hw)
pdata %>% select(-c(sNN,sRF,sSVM,mNNt,smNNt,mTt,smTt)) %>%
gather('model','acc',-samplesize)%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('Validation Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
# plot the standard errors
png('results_ciphar_se_plot.png',width = hw,height = hw)
pdata %>% select(-c(mNN,mRF,mSVM,mNNt,smNNt,mTt,smTt)) %>%
gather('model','se',-samplesize)%>%
ggplot(aes(samplesize,se,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('SE of Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
# plot the time
png('results_ciphar_time_plot.png',width = hw,height = hw)
pdata %>% select(-c(mNN,sNN,mRF,sRF,mSVM,sSVM,smNNt,smTt)) %>%
gather('model','time',-samplesize)%>%
ggplot(aes(samplesize,time,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue"),
labels = c('CNN','Total')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('Time') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
### means table for range
start = 3000
stop = 4000
mdata = pdata %>% filter(samplesize %in% seq(start,stop))
out = apply(mdata,2,function(x) round(mean(x),4)) %>%
select(-samplesize)
### spot checks
spots = c(100,500,1000,5000)
pdata %>% filter(samplesize %in% spots) %>%
select(-c(mNN,mRF,mSVM,mNNt,smNNt,smTt))
## Nick Wornson
## Plan B Project
## This script will look at data generated from run_experiment.py
library(tidyverse)
setwd('C:/Users/XPS9360/Documents/grad_stuff/Spring 19/Plan B')
res_2000 = read.csv('results_2000.csv')
res_10000 = read.csv('results_10000_bn_deep.csv')
# png's for the website
setwd('C:/Users/XPS9360/Documents/webpage/nwornson.github.io/assets')
#facet plot
png('facet.png')
res_2000 %>% select(-time) %>%
gather('model','acc',-c(depth,samplesize))%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point() + geom_smooth(se = FALSE) +
facet_wrap('depth')
dev.off()
#Make this plot cooler with stuff from jp's plots
png('results_plot.png')
res_10000 %>% select(-time) %>%
gather('model','acc',-samplesize)%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.9,.2)) +
xlab('Sample Size') + ylab('Validation Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=5),axis.title=element_text(size=6),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
### results of 5 runs of ciphar experiment
setwd('C:/Users/Nick/Documents/Classes/Spring 19/Plan B/Ciphar_results')
cdata = data.frame('samplesize' = numeric(),
'NN_acc' = numeric(),
'RF_acc' = numeric(),
'SVM_acc' = numeric(),
'nntime' = numeric(),
'tottime' = numeric(),
'run' = numeric())
for(i in 1:5){
filename = paste('results_5000_',i,'.csv',sep = "")
temp = read.csv(filename)
run = rep(i,nrow(temp))
result = cbind(temp,run)
cdata = rbind(cdata,result)
}
#write.csv(cdata,'ciphar_cdata.csv',row.names = FALSE)
pdata = cdata %>%
group_by(samplesize) %>%
summarise(mNN = mean(NN_acc),
sNN = sd(NN_acc),
mRF = mean(RF_acc),
sRF = sd(RF_acc),
mSVM = mean(SVM_acc),
sSVM = sd(SVM_acc),
mNNt = mean(nntime),
smNNt = sd(nntime),
mTt = mean(tottime),
smTt = sd(tottime))
#write.csv(pdata,'ciphar_pdata.csv',row.names = FALSE)
#setwd('C:/Users/Nick/Documents/Classes/Spring 19/Plan B/final_paper')
hw = 5 # height/width
# plot the means
png('results_ciphar_mean_plot.png')
pdata %>% select(-c(sNN,sRF,sSVM,mNNt,smNNt,mTt,smTt)) %>%
gather('model','acc',-samplesize)%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('Validation Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
# plot the standard errors
png('results_ciphar_se_plot.png')
pdata %>% select(-c(mNN,mRF,mSVM,mNNt,smNNt,mTt,smTt)) %>%
gather('model','se',-samplesize)%>%
ggplot(aes(samplesize,se,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('SE of Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
# plot the time
png('results_ciphar_time_plot.png')
pdata %>% select(-c(mNN,sNN,mRF,sRF,mSVM,sSVM,smNNt,smTt)) %>%
gather('model','time',-samplesize)%>%
ggplot(aes(samplesize,time,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue"),
labels = c('CNN','Total')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('Time') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
### means table for range
start = 3000
stop = 4000
mdata = pdata %>% filter(samplesize %in% seq(start,stop))
out = apply(mdata,2,function(x) round(mean(x),4)) %>%
select(-samplesize)
### spot checks
spots = c(100,500,1000,5000)
pdata %>% filter(samplesize %in% spots) %>%
select(-c(mNN,mRF,mSVM,mNNt,smNNt,smTt))
## Nick Wornson
## Plan B Project
## This script will look at data generated from run_experiment.py
library(tidyverse)
setwd('C:/Users/XPS9360/Documents/grad_stuff/Spring 19/Plan B')
res_2000 = read.csv('results_2000.csv')
res_10000 = read.csv('results_10000_bn_deep.csv')
# png's for the website
setwd('C:/Users/XPS9360/Documents/webpage/nwornson.github.io/assets')
#facet plot
png('facet.png')
res_2000 %>% select(-time) %>%
gather('model','acc',-c(depth,samplesize))%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point() + geom_smooth(se = FALSE) +
facet_wrap('depth')
dev.off()
#Make this plot cooler with stuff from jp's plots
png('results_plot.png')
res_10000 %>% select(-time) %>%
gather('model','acc',-samplesize)%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.9,.2)) +
xlab('Sample Size') + ylab('Validation Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=5),axis.title=element_text(size=6),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
### results of 5 runs of ciphar experiment
setwd('C:/Users/XPS9360/Documents/grad_stuff/Spring 19/Plan B/Ciphar_results')
cdata = data.frame('samplesize' = numeric(),
'NN_acc' = numeric(),
'RF_acc' = numeric(),
'SVM_acc' = numeric(),
'nntime' = numeric(),
'tottime' = numeric(),
'run' = numeric())
for(i in 1:5){
filename = paste('results_5000_',i,'.csv',sep = "")
temp = read.csv(filename)
run = rep(i,nrow(temp))
result = cbind(temp,run)
cdata = rbind(cdata,result)
}
#write.csv(cdata,'ciphar_cdata.csv',row.names = FALSE)
pdata = cdata %>%
group_by(samplesize) %>%
summarise(mNN = mean(NN_acc),
sNN = sd(NN_acc),
mRF = mean(RF_acc),
sRF = sd(RF_acc),
mSVM = mean(SVM_acc),
sSVM = sd(SVM_acc),
mNNt = mean(nntime),
smNNt = sd(nntime),
mTt = mean(tottime),
smTt = sd(tottime))
#write.csv(pdata,'ciphar_pdata.csv',row.names = FALSE)
setwd('C:/Users/XPS9360/Documents/webpage/nwornson.github.io/assets')
hw = 5 # height/width
# plot the means
png('results_ciphar_mean_plot.png')
pdata %>% select(-c(sNN,sRF,sSVM,mNNt,smNNt,mTt,smTt)) %>%
gather('model','acc',-samplesize)%>%
ggplot(aes(samplesize,acc,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('Validation Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
# plot the standard errors
png('results_ciphar_se_plot.png')
pdata %>% select(-c(mNN,mRF,mSVM,mNNt,smNNt,mTt,smTt)) %>%
gather('model','se',-samplesize)%>%
ggplot(aes(samplesize,se,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue",'orange'),
labels = c('CNN','Random Forest','SVM')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('SE of Accuracy') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
# plot the time
png('results_ciphar_time_plot.png')
pdata %>% select(-c(mNN,sNN,mRF,sRF,mSVM,sSVM,smNNt,smTt)) %>%
gather('model','time',-samplesize)%>%
ggplot(aes(samplesize,time,color = model)) +
geom_point(size = .5) +
geom_smooth(se = FALSE) +
scale_color_manual('',values=c("red", "blue"),
labels = c('CNN','Total')) +
theme_bw() +
theme(legend.position = c(.7,.2)) +
xlab('Sample Size') + ylab('Time') +
theme(panel.grid = element_blank()) +
theme(axis.text=element_text(size=7),axis.title=element_text(size=8),
strip.background = element_rect(colour = "black", fill = "white"),
strip.text = element_text(size=7))
dev.off()
### means table for range
start = 3000
stop = 4000
mdata = pdata %>% filter(samplesize %in% seq(start,stop))
out = apply(mdata,2,function(x) round(mean(x),4)) %>%
select(-samplesize)
### spot checks
spots = c(100,500,1000,5000)
pdata %>% filter(samplesize %in% spots) %>%
select(-c(mNN,mRF,mSVM,mNNt,smNNt,smTt))
